{"version":3,"sources":["webpack:///./node_modules/easy-pie-chart/dist/easypiechart.js"],"names":["__WEBPACK_AMD_DEFINE_RESULT__","root","factory","this","CanvasRenderer","el","options","cachedBackground","canvas","document","createElement","appendChild","G_vmlCanvasManager","initElement","ctx","getContext","width","height","size","scaleBy","window","devicePixelRatio","style","join","scale","translate","rotate","Math","PI","radius","lineWidth","scaleColor","scaleLength","Date","now","drawCircle","color","percent","isNegative","min","max","beginPath","arc","strokeStyle","stroke","reqAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","setTimeout","drawBackground","offset","length","fillStyle","save","i","fillRect","restore","drawScale","trackColor","trackWidth","getCanvas","getCtx","clear","clearRect","draw","getImageData","putImageData","lineCap","barColor","bind","animate","from","to","startTime","onStart","animation","process","duration","currentValue","easing","onStep","onStop","opts","defaultOptions","undefined","enabled","x","t","b","c","d","renderer","init","hasOwnProperty","jQuery","isFunction","dataset","update","parseFloat","getAttribute","newValue","disableAnimation","enableAnimation","apply","exports","module"],"mappings":"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","file":"static/js/8.fc0b083161bb22430275.js","sourcesContent":["/**!\n * easy-pie-chart\n * Lightweight plugin to render simple, animated and retina optimized pie charts\n *\n * @license \n * @author Robert Fleischmann <rendro87@gmail.com> (http://robert-fleischmann.de)\n * @version 2.1.7\n **/\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define([], function () {\n      return (root['EasyPieChart'] = factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['EasyPieChart'] = factory();\n  }\n}(this, function () {\n\n/**\n * Renderer to render the chart on a canvas object\n * @param {DOMElement} el      DOM element to host the canvas (root of the plugin)\n * @param {object}     options options object of the plugin\n */\nvar CanvasRenderer = function(el, options) {\n\tvar cachedBackground;\n\tvar canvas = document.createElement('canvas');\n\n\tel.appendChild(canvas);\n\n\tif (typeof(G_vmlCanvasManager) === 'object') {\n\t\tG_vmlCanvasManager.initElement(canvas);\n\t}\n\n\tvar ctx = canvas.getContext('2d');\n\n\tcanvas.width = canvas.height = options.size;\n\n\t// canvas on retina devices\n\tvar scaleBy = 1;\n\tif (window.devicePixelRatio > 1) {\n\t\tscaleBy = window.devicePixelRatio;\n\t\tcanvas.style.width = canvas.style.height = [options.size, 'px'].join('');\n\t\tcanvas.width = canvas.height = options.size * scaleBy;\n\t\tctx.scale(scaleBy, scaleBy);\n\t}\n\n\t// move 0,0 coordinates to the center\n\tctx.translate(options.size / 2, options.size / 2);\n\n\t// rotate canvas -90deg\n\tctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI);\n\n\tvar radius = (options.size - options.lineWidth) / 2;\n\tif (options.scaleColor && options.scaleLength) {\n\t\tradius -= options.scaleLength + 2; // 2 is the distance between scale and bar\n\t}\n\n\t// IE polyfill for Date\n\tDate.now = Date.now || function() {\n\t\treturn +(new Date());\n\t};\n\n\t/**\n\t * Draw a circle around the center of the canvas\n\t * @param {strong} color     Valid CSS color string\n\t * @param {number} lineWidth Width of the line in px\n\t * @param {number} percent   Percentage to draw (float between -1 and 1)\n\t */\n\tvar drawCircle = function(color, lineWidth, percent) {\n\t\tpercent = Math.min(Math.max(-1, percent || 0), 1);\n\t\tvar isNegative = percent <= 0 ? true : false;\n\n\t\tctx.beginPath();\n\t\tctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, isNegative);\n\n\t\tctx.strokeStyle = color;\n\t\tctx.lineWidth = lineWidth;\n\n\t\tctx.stroke();\n\t};\n\n\t/**\n\t * Draw the scale of the chart\n\t */\n\tvar drawScale = function() {\n\t\tvar offset;\n\t\tvar length;\n\n\t\tctx.lineWidth = 1;\n\t\tctx.fillStyle = options.scaleColor;\n\n\t\tctx.save();\n\t\tfor (var i = 24; i > 0; --i) {\n\t\t\tif (i % 6 === 0) {\n\t\t\t\tlength = options.scaleLength;\n\t\t\t\toffset = 0;\n\t\t\t} else {\n\t\t\t\tlength = options.scaleLength * 0.6;\n\t\t\t\toffset = options.scaleLength - length;\n\t\t\t}\n\t\t\tctx.fillRect(-options.size/2 + offset, 0, length, 1);\n\t\t\tctx.rotate(Math.PI / 12);\n\t\t}\n\t\tctx.restore();\n\t};\n\n\t/**\n\t * Request animation frame wrapper with polyfill\n\t * @return {function} Request animation frame method or timeout fallback\n\t */\n\tvar reqAnimationFrame = (function() {\n\t\treturn  window.requestAnimationFrame ||\n\t\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\t\tfunction(callback) {\n\t\t\t\t\twindow.setTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t}());\n\n\t/**\n\t * Draw the background of the plugin including the scale and the track\n\t */\n\tvar drawBackground = function() {\n\t\tif(options.scaleColor) drawScale();\n\t\tif(options.trackColor) drawCircle(options.trackColor, options.trackWidth || options.lineWidth, 1);\n\t};\n\n  /**\n    * Canvas accessor\n   */\n  this.getCanvas = function() {\n    return canvas;\n  };\n\n  /**\n    * Canvas 2D context 'ctx' accessor\n   */\n  this.getCtx = function() {\n    return ctx;\n  };\n\n\t/**\n\t * Clear the complete canvas\n\t */\n\tthis.clear = function() {\n\t\tctx.clearRect(options.size / -2, options.size / -2, options.size, options.size);\n\t};\n\n\t/**\n\t * Draw the complete chart\n\t * @param {number} percent Percent shown by the chart between -100 and 100\n\t */\n\tthis.draw = function(percent) {\n\t\t// do we need to render a background\n\t\tif (!!options.scaleColor || !!options.trackColor) {\n\t\t\t// getImageData and putImageData are supported\n\t\t\tif (ctx.getImageData && ctx.putImageData) {\n\t\t\t\tif (!cachedBackground) {\n\t\t\t\t\tdrawBackground();\n\t\t\t\t\tcachedBackground = ctx.getImageData(0, 0, options.size * scaleBy, options.size * scaleBy);\n\t\t\t\t} else {\n\t\t\t\t\tctx.putImageData(cachedBackground, 0, 0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.clear();\n\t\t\t\tdrawBackground();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.clear();\n\t\t}\n\n\t\tctx.lineCap = options.lineCap;\n\n\t\t// if barcolor is a function execute it and pass the percent as a value\n\t\tvar color;\n\t\tif (typeof(options.barColor) === 'function') {\n\t\t\tcolor = options.barColor(percent);\n\t\t} else {\n\t\t\tcolor = options.barColor;\n\t\t}\n\n\t\t// draw bar\n\t\tdrawCircle(color, options.lineWidth, percent / 100);\n\t}.bind(this);\n\n\t/**\n\t * Animate from some percent to some other percentage\n\t * @param {number} from Starting percentage\n\t * @param {number} to   Final percentage\n\t */\n\tthis.animate = function(from, to) {\n\t\tvar startTime = Date.now();\n\t\toptions.onStart(from, to);\n\t\tvar animation = function() {\n\t\t\tvar process = Math.min(Date.now() - startTime, options.animate.duration);\n\t\t\tvar currentValue = options.easing(this, process, from, to - from, options.animate.duration);\n\t\t\tthis.draw(currentValue);\n\t\t\toptions.onStep(from, to, currentValue);\n\t\t\tif (process >= options.animate.duration) {\n\t\t\t\toptions.onStop(from, to);\n\t\t\t} else {\n\t\t\t\treqAnimationFrame(animation);\n\t\t\t}\n\t\t}.bind(this);\n\n\t\treqAnimationFrame(animation);\n\t}.bind(this);\n};\n\nvar EasyPieChart = function(el, opts) {\n\tvar defaultOptions = {\n\t\tbarColor: '#ef1e25',\n\t\ttrackColor: '#f9f9f9',\n\t\tscaleColor: '#dfe0e0',\n\t\tscaleLength: 5,\n\t\tlineCap: 'round',\n\t\tlineWidth: 3,\n\t\ttrackWidth: undefined,\n\t\tsize: 110,\n\t\trotate: 0,\n\t\tanimate: {\n\t\t\tduration: 1000,\n\t\t\tenabled: true\n\t\t},\n\t\teasing: function (x, t, b, c, d) { // more can be found here: http://gsgd.co.uk/sandbox/jquery/easing/\n\t\t\tt = t / (d/2);\n\t\t\tif (t < 1) {\n\t\t\t\treturn c / 2 * t * t + b;\n\t\t\t}\n\t\t\treturn -c/2 * ((--t)*(t-2) - 1) + b;\n\t\t},\n\t\tonStart: function(from, to) {\n\t\t\treturn;\n\t\t},\n\t\tonStep: function(from, to, currentValue) {\n\t\t\treturn;\n\t\t},\n\t\tonStop: function(from, to) {\n\t\t\treturn;\n\t\t}\n\t};\n\n\t// detect present renderer\n\tif (typeof(CanvasRenderer) !== 'undefined') {\n\t\tdefaultOptions.renderer = CanvasRenderer;\n\t} else if (typeof(SVGRenderer) !== 'undefined') {\n\t\tdefaultOptions.renderer = SVGRenderer;\n\t} else {\n\t\tthrow new Error('Please load either the SVG- or the CanvasRenderer');\n\t}\n\n\tvar options = {};\n\tvar currentValue = 0;\n\n\t/**\n\t * Initialize the plugin by creating the options object and initialize rendering\n\t */\n\tvar init = function() {\n\t\tthis.el = el;\n\t\tthis.options = options;\n\n\t\t// merge user options into default options\n\t\tfor (var i in defaultOptions) {\n\t\t\tif (defaultOptions.hasOwnProperty(i)) {\n\t\t\t\toptions[i] = opts && typeof(opts[i]) !== 'undefined' ? opts[i] : defaultOptions[i];\n\t\t\t\tif (typeof(options[i]) === 'function') {\n\t\t\t\t\toptions[i] = options[i].bind(this);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// check for jQuery easing\n\t\tif (typeof(options.easing) === 'string' && typeof(jQuery) !== 'undefined' && jQuery.isFunction(jQuery.easing[options.easing])) {\n\t\t\toptions.easing = jQuery.easing[options.easing];\n\t\t} else {\n\t\t\toptions.easing = defaultOptions.easing;\n\t\t}\n\n\t\t// process earlier animate option to avoid bc breaks\n\t\tif (typeof(options.animate) === 'number') {\n\t\t\toptions.animate = {\n\t\t\t\tduration: options.animate,\n\t\t\t\tenabled: true\n\t\t\t};\n\t\t}\n\n\t\tif (typeof(options.animate) === 'boolean' && !options.animate) {\n\t\t\toptions.animate = {\n\t\t\t\tduration: 1000,\n\t\t\t\tenabled: options.animate\n\t\t\t};\n\t\t}\n\n\t\t// create renderer\n\t\tthis.renderer = new options.renderer(el, options);\n\n\t\t// initial draw\n\t\tthis.renderer.draw(currentValue);\n\n\t\t// initial update\n\t\tif (el.dataset && el.dataset.percent) {\n\t\t\tthis.update(parseFloat(el.dataset.percent));\n\t\t} else if (el.getAttribute && el.getAttribute('data-percent')) {\n\t\t\tthis.update(parseFloat(el.getAttribute('data-percent')));\n\t\t}\n\t}.bind(this);\n\n\t/**\n\t * Update the value of the chart\n\t * @param  {number} newValue Number between 0 and 100\n\t * @return {object}          Instance of the plugin for method chaining\n\t */\n\tthis.update = function(newValue) {\n\t\tnewValue = parseFloat(newValue);\n\t\tif (options.animate.enabled) {\n\t\t\tthis.renderer.animate(currentValue, newValue);\n\t\t} else {\n\t\t\tthis.renderer.draw(newValue);\n\t\t}\n\t\tcurrentValue = newValue;\n\t\treturn this;\n\t}.bind(this);\n\n\t/**\n\t * Disable animation\n\t * @return {object} Instance of the plugin for method chaining\n\t */\n\tthis.disableAnimation = function() {\n\t\toptions.animate.enabled = false;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Enable animation\n\t * @return {object} Instance of the plugin for method chaining\n\t */\n\tthis.enableAnimation = function() {\n\t\toptions.animate.enabled = true;\n\t\treturn this;\n\t};\n\n\tinit();\n};\n\nreturn EasyPieChart;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/easy-pie-chart/dist/easypiechart.js\n// module id = PeU/\n// module chunks = 8"],"sourceRoot":""}